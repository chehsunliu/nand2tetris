function Maze.new 3
push constant 12
call Memory.alloc 1
pop pointer 0
push constant 16
pop this 1
push constant 32
pop this 2
push this 1
call Array.new 1
pop this 0
push constant 16
pop this 3
push constant 0
pop this 4
push constant 5
pop this 5
push constant 26
pop this 6
push this 5
pop this 7
push this 6
pop this 8
push constant 0
pop this 9
push constant 0
pop this 10
push constant 0
pop this 11
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push this 2
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 2
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 2
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
call Cell.new 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Maze.getCell 1
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
return
function Maze.isWalkable 1
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call Maze.getCell 3
pop local 0
push local 0
call Cell.isVisited 1
return
function Maze.check 1
push argument 0
pop pointer 0
push pointer 0
push this 7
push this 8
call Maze.getCell 3
pop local 0
push local 0
call Cell.isTerminal 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Screen.clearScreen 0
pop temp 0
push constant 4
call String.new 1
push constant 87
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
call Sys.halt 0
pop temp 0
label IF_FALSE0
push constant 0
return
function Maze.init 0
push argument 0
pop pointer 0
push pointer 0
call Maze.dfs 1
pop temp 0
push pointer 0
call Maze.draw 1
pop temp 0
push pointer 0
call Maze.drawTerminal 1
pop temp 0
push pointer 0
push this 5
push this 6
push constant 0
not
call Maze.drawCircle 4
pop temp 0
push constant 0
return
function Maze.dfs 1
push argument 0
pop pointer 0
push constant 0
pop this 4
push pointer 0
push this 5
push this 6
push constant 0
call Maze.dfsVisit 4
pop temp 0
push pointer 0
push this 10
push this 11
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setTerminal 2
pop temp 0
push constant 0
return
function Maze.dfsVisit 3
push argument 0
pop pointer 0
push argument 1
push this 1
eq
push argument 1
push this 1
gt
or
push argument 1
push constant 0
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 2
push this 2
eq
push argument 2
push this 2
gt
or
push argument 2
push constant 0
lt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push pointer 0
push argument 1
push argument 2
call Maze.getCell 3
pop local 0
push local 0
call Cell.isVisited 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
push this 4
push constant 1
add
pop this 4
push argument 3
push this 9
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 3
pop this 9
push argument 1
pop this 10
push argument 2
pop this 11
label IF_FALSE3
push argument 3
push constant 1
add
pop argument 3
push this 4
push constant 50
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push argument 1
push constant 2
add
push argument 2
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push argument 1
push constant 1
add
push argument 2
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE5
push pointer 0
push argument 1
push argument 2
push constant 2
add
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push pointer 0
push argument 1
push argument 2
push constant 1
add
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE6
push pointer 0
push argument 1
push constant 2
sub
push argument 2
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
push argument 1
push constant 1
sub
push argument 2
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE7
push pointer 0
push argument 1
push argument 2
push constant 2
sub
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push argument 1
push argument 2
push constant 1
sub
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE8
push constant 0
not
return
label IF_FALSE4
push this 4
push constant 40
gt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push pointer 0
push argument 1
push constant 2
sub
push argument 2
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push pointer 0
push argument 1
push constant 1
sub
push argument 2
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE10
push pointer 0
push argument 1
push argument 2
push constant 2
sub
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push pointer 0
push argument 1
push argument 2
push constant 1
sub
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE11
push pointer 0
push argument 1
push constant 2
add
push argument 2
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push pointer 0
push argument 1
push constant 1
add
push argument 2
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE12
push pointer 0
push argument 1
push argument 2
push constant 2
add
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push pointer 0
push argument 1
push argument 2
push constant 1
add
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE13
push constant 0
not
return
label IF_FALSE9
push this 4
push constant 25
gt
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push pointer 0
push argument 1
push constant 2
sub
push argument 2
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push pointer 0
push argument 1
push constant 1
sub
push argument 2
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE15
push pointer 0
push argument 1
push argument 2
push constant 2
add
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push pointer 0
push argument 1
push argument 2
push constant 1
add
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE16
push pointer 0
push argument 1
push argument 2
push constant 2
sub
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push pointer 0
push argument 1
push argument 2
push constant 1
sub
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE17
push pointer 0
push argument 1
push constant 2
add
push argument 2
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push pointer 0
push argument 1
push constant 1
add
push argument 2
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE18
push constant 0
not
return
label IF_FALSE14
push pointer 0
push argument 1
push constant 2
add
push argument 2
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE19
goto IF_FALSE19
label IF_TRUE19
push pointer 0
push argument 1
push constant 1
add
push argument 2
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE19
push pointer 0
push argument 1
push argument 2
push constant 2
add
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE20
goto IF_FALSE20
label IF_TRUE20
push pointer 0
push argument 1
push argument 2
push constant 1
add
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE20
push pointer 0
push argument 1
push argument 2
push constant 2
sub
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE21
goto IF_FALSE21
label IF_TRUE21
push pointer 0
push argument 1
push argument 2
push constant 1
sub
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE21
push pointer 0
push argument 1
push constant 2
sub
push argument 2
push argument 3
call Maze.dfsVisit 4
if-goto IF_TRUE22
goto IF_FALSE22
label IF_TRUE22
push pointer 0
push argument 1
push constant 1
sub
push argument 2
call Maze.getCell 3
pop local 0
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_FALSE22
push constant 0
not
return
function Maze.draw 6
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 2
lt
not
if-goto WHILE_END1
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 1
push local 4
add
pop pointer 1
push that 0
pop local 5
push local 5
call Cell.isVisited 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 3
call Math.multiply 2
pop local 2
push local 1
push this 3
call Math.multiply 2
pop local 3
push local 3
push local 2
push local 3
push this 3
add
push constant 1
sub
push local 2
push this 3
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Maze.drawCircle 2
push argument 0
pop pointer 0
push argument 3
call Screen.setColor 1
pop temp 0
push argument 1
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
pop local 0
push argument 2
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
pop local 1
push local 1
push local 0
push constant 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Maze.drawTerminal 2
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 10
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
pop local 0
push this 11
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
pop local 1
push local 1
push local 0
push constant 1
call Screen.drawCircle 3
pop temp 0
push this 10
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 1
add
pop local 0
push this 11
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 1
add
pop local 1
push local 1
push local 0
push constant 1
call Screen.drawCircle 3
pop temp 0
push this 10
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 1
add
pop local 0
push this 11
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 1
sub
pop local 1
push local 1
push local 0
push constant 1
call Screen.drawCircle 3
pop temp 0
push this 10
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 1
sub
pop local 0
push this 11
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 1
sub
pop local 1
push local 1
push local 0
push constant 1
call Screen.drawCircle 3
pop temp 0
push this 10
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 1
sub
pop local 0
push this 11
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 1
add
pop local 1
push local 1
push local 0
push constant 1
call Screen.drawCircle 3
pop temp 0
push this 10
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 2
add
pop local 0
push this 11
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 2
add
pop local 1
push local 1
push local 0
push constant 1
call Screen.drawCircle 3
pop temp 0
push this 10
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 2
add
pop local 0
push this 11
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 2
sub
pop local 1
push local 1
push local 0
push constant 1
call Screen.drawCircle 3
pop temp 0
push this 10
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 2
sub
pop local 0
push this 11
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 2
sub
pop local 1
push local 1
push local 0
push constant 1
call Screen.drawCircle 3
pop temp 0
push this 10
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 2
sub
pop local 0
push this 11
push this 3
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
add
push constant 2
add
pop local 1
push local 1
push local 0
push constant 1
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Maze.moveUp 1
push argument 0
pop pointer 0
push this 7
push constant 1
sub
pop local 0
push local 0
push constant 0
eq
push local 0
push constant 0
gt
or
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push pointer 0
push local 0
push this 8
call Maze.isWalkable 3
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push pointer 0
push this 7
push this 8
push constant 0
call Maze.drawCircle 4
pop temp 0
push local 0
pop this 7
push pointer 0
push this 7
push this 8
push constant 0
not
call Maze.drawCircle 4
pop temp 0
push constant 0
return
function Maze.moveDown 1
push argument 0
pop pointer 0
push this 7
push constant 1
add
pop local 0
push local 0
push this 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push pointer 0
push local 0
push this 8
call Maze.isWalkable 3
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push pointer 0
push this 7
push this 8
push constant 0
call Maze.drawCircle 4
pop temp 0
push local 0
pop this 7
push pointer 0
push this 7
push this 8
push constant 0
not
call Maze.drawCircle 4
pop temp 0
push constant 0
return
function Maze.moveLeft 1
push argument 0
pop pointer 0
push this 8
push constant 1
sub
pop local 0
push local 0
push constant 0
eq
push local 0
push constant 0
gt
or
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push pointer 0
push this 7
push local 0
call Maze.isWalkable 3
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push pointer 0
push this 7
push this 8
push constant 0
call Maze.drawCircle 4
pop temp 0
push local 0
pop this 8
push pointer 0
push this 7
push this 8
push constant 0
not
call Maze.drawCircle 4
pop temp 0
push constant 0
return
function Maze.moveRight 1
push argument 0
pop pointer 0
push this 8
push constant 1
add
pop local 0
push local 0
push this 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push pointer 0
push this 7
push local 0
call Maze.isWalkable 3
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push pointer 0
push this 7
push this 8
push constant 0
call Maze.drawCircle 4
pop temp 0
push local 0
pop this 8
push pointer 0
push this 7
push this 8
push constant 0
not
call Maze.drawCircle 4
pop temp 0
push constant 0
return
